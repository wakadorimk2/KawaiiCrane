= はじめに
手に取って頂いてありがとうございます。この本では、デバイスを問わずアクセス可能で動的なWebアプリケーションの作り方を紹介します。

Webアプリって何？難しそう！という方に向けて、そんなに怖いものじゃないですよ〜楽しいですよ〜ってのを伝えていきたい。

自分の作りたいものが作れる！
(図)

= Webアプリケーション
Webアプリケーションってそもそも何でしょうか。普段から私たちの見ているWebサイトやホームページが典型的な例です。

誰かがホームページを作ってパソコンの中に置いていて、私たちはそこへ自由にアクセスできる状態と言えます。

自由にアクセスできる状態
(図)

もう少し難しい言い方をすると、何処かのサーバにホームページが存在していて、ユーザはインターネットを介することでそれを閲覧できます。
特にその中でもHTMLのようなマークアップ言語で書かれているものがホームページです。Google ChromeやSafariなどのWebブラウザを通して見る形になっているのが殆どです。

その中でもユーザのアクションに応じて動的に応答を返すものを動的ホームページと呼んだり、Webアプリケーションと呼んだりします。

#@# Webアプリケーションの例 : Twitter, Youtube, Netflix

= Webアプリの作り方
作り方は筆者も把握しきれないほどの選択肢が存在しています。Webアプリの基本的な構成はフロントエンドとバックエンドの2つに大別されます。
フロントエンドはユーザが直接触れるホームページの部分を指していて、バックエンドはその裏で動いているデータ管理用のサーバなどを指します。
それらに付随して、データ管理に不可欠なデータベースについても、様々なアーキテクチャと言語が存在しています。

本書ではフロントエンド、バックエンド、データベースのそれぞれについて解説と実装をしていきます。

= アプリの公開
作ったWebアプリケーションを自分や他の人のスマホからアクセスするには、アプリをインターネット上のサーバに置く必要があります。
開発している最中は、開発場所になっているパソコンそのものの上で実行とアクセスをすれば良いのですが、
アプリを公開するとなるとメンテナンスやセキュリティの面で問題が出てきます。

そこで専用のサーバを買ってくるか、誰かのサーバを借りることになります。ここは手間の少ないサーバを借りる方法で行きましょう。
2020年現在では、便利なことにクラウドサービスが発達しています。パソコンを借りる時は素直に考えると、N人のアクセスが予想される時、N人分の計算リソースを用意する必要があるからM台必要だ、という考えになりそうです。
しかしクラウドサービスでは、インスタンスという単位で計算リソースを借りることが出来て分かりやすい上に、もしアクセスが増えた時に一時的に計算リソースを借り増しするというスケーラビリティまで自動的にコントロールしてくれるようになっています。

= おまけ : 機械学習モデルによるレコメンドアルゴリズム
本書の内容を活用して開発したKawaiiCraneですが、実はイラストを表示する順番を決めるのに、機械学習を使っています。正確に言うと、イラストから機械学習モデルでタグを抽出し、タグを特徴量と考えてレコメンドのコンテンツとしています。
その仕組を簡単に説明します。

== 機械学習
機械学習の中でもニューラルネットワークという、人間の脳構造を模したアルゴリズムに基づいたモデルを利用しています。多次元入力多次元出力で、非線形な関数も近似できると考えられており、様々なタスクで高いパフォーマンスを出しています。

== レコメンド
消費者が商品を選択する時に、商品が多すぎると何を基準に選んで良いか分からなくなります。それを手助けするアルゴリズムがレコメンドです。